{"ast":null,"code":"var _jsxFileName = \"/home/nikunj/chrome/Reactprojects/useeffectex/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [mailvalid, funtoupdatestate] = useReducer((state, action) => {\n    if (action.type === 'USER_INPUT') {\n      return {\n        value: action.val,\n        isvalid: action.val.includes('@')\n      };\n    } else if (action.type === 'INPUT_BLUR') {\n      return {\n        value: state.val,\n        isvalid: state.val.includes('@')\n      };\n    }\n\n    return {\n      value: '',\n      isvalid: false\n    };\n  }, {\n    value: '',\n    isvalid: false\n  });\n  console.log('login component');\n  useEffect(() => {\n    console.log('validation effect ran');\n    setFormIsValid(mailvalid.value.includes('@') && enteredPassword.trim().length > 6);\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    funtoupdatestate({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    funtoupdatestate({\n      type: 'INPUT_BLUR'\n    }); // setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(mailvalid.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: mailvalid.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"3StWqwlr4813AkEQNLyS105JgOI=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/nikunj/chrome/Reactprojects/useeffectex/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","mailvalid","funtoupdatestate","state","action","type","value","val","isvalid","includes","console","log","trim","length","enteredEmail","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","emailIsValid","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState , useEffect , useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\nconst [mailvalid , funtoupdatestate] = useReducer((state , action)=>{\n\nif(action.type === 'USER_INPUT'){\n  return {value: action.val , isvalid : action.val.includes('@')};\n}else if(action.type === 'INPUT_BLUR'){\n  return {value:state.val , isvalid : state.val.includes('@')};\n}\nreturn {value : '' , isvalid:false}\n} , {value:'' , isvalid:false} )\n\nconsole.log('login component');\n  useEffect(() =>{\n\n    console.log('validation effect ran');\n      setFormIsValid(\n        mailvalid.value.includes('@') && enteredPassword.trim().length > 6\n      );\n    \n    } , [enteredEmail , enteredPassword])\n    \n\n  const emailChangeHandler = (event) => {\n\n    funtoupdatestate({type:'USER_INPUT' , val : event.target.value});\n\n    // setEnteredEmail(event.target.value);\n\n\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    funtoupdatestate({type:'INPUT_BLUR'});\n\n    // setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(mailvalid.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={mailvalid.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}